/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, StreetLight as PrismaStreetLight } from "@prisma/client";

export class StreetLightServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.StreetLightCountArgs, "select">
  ): Promise<number> {
    return this.prisma.streetLight.count(args);
  }

  async streetLights(
    args: Prisma.StreetLightFindManyArgs
  ): Promise<PrismaStreetLight[]> {
    return this.prisma.streetLight.findMany(args);
  }
  async streetLight(
    args: Prisma.StreetLightFindUniqueArgs
  ): Promise<PrismaStreetLight | null> {
    return this.prisma.streetLight.findUnique(args);
  }
  async createStreetLight(
    args: Prisma.StreetLightCreateArgs
  ): Promise<PrismaStreetLight> {
    return this.prisma.streetLight.create(args);
  }
  async updateStreetLight(
    args: Prisma.StreetLightUpdateArgs
  ): Promise<PrismaStreetLight> {
    return this.prisma.streetLight.update(args);
  }
  async deleteStreetLight(
    args: Prisma.StreetLightDeleteArgs
  ): Promise<PrismaStreetLight> {
    return this.prisma.streetLight.delete(args);
  }
}
